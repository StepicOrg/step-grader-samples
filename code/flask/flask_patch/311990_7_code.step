{"block":{"name":"code","text":"<p><strong>Практика: patch</strong></p>\n\n<p>В базе данных хранится расписание поездов. Напишите представление для Patch-запроса, который заменит только те поля, которые будут переданы. Названия полей в запросе должны совпадать с названиями полей в базе.</p>","video":null,"options":{"execution_time_limit":5,"execution_memory_limit":256,"limits":{"python3":{"time":15,"memory":256}},"code_templates":{"python3":"#class Trains(db.Model):\n#    __tablename__ = \"trains\"\n#\n#    id = db.Column(db.Integer, primary_key=True)\n#    number = db.Column(db.String, nullable=False)\n#    title = db.Column(db.String, nullable=False)\n#    txt_from = db.Column(db.String, nullable=False)\n#    txt_to = db.Column(db.Integer, nullable=False)\n#    leaving = db.Column(db.Integer, nullable=False)\n\n@app.route(\"/trains/<int:train_id>\",methods=[\"PATCH\"])\ndef api_patch_trains(train_id):  \n\n    return jsonify({})"},"code_templates_header_lines_count":{"python3":35},"code_templates_footer_lines_count":{"python3":18},"code_templates_options":{},"samples":[["PATCH /trains/2 {\"leaving\":\"11:50\"}","{'leaving': '11:50', 'number': '801В', 'title': 'Ласточка', 'txt_from': 'Москва', 'txt_to': 'Санкт-Петербург'}"],["PATCH /trains/2 {\"txt_to\":\"Волгоград\"}","{'leaving': '11:30', 'number': '801В', 'title': 'Ласточка', 'txt_from': 'Москва', 'txt_to': 'Волгоград'}"]],"is_run_user_code_allowed":true},"subtitle_files":[],"source":{"code":"# This is a sample Code Challenge\n# Learn more: https://stepik.org/lesson/9173\n# Ask your questions via support@stepik.org\n\ndef generate():\n    return []\n\ndef check(reply, clue):\n    return reply.strip() == clue.strip()\n\n# def solve(dataset):\n#     a, b = dataset.split()\n#     return str(int(a) + int(b))","execution_time_limit":5,"execution_memory_limit":256,"samples_count":2,"templates_data":"::python3\n::header\n\nfrom flask import Flask, jsonify, request\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.secret_key = \"randomstring\"\napp.config['SQLALCHEMY_DATABASE_URI'] = \"sqlite:///:memory:\"\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\n\ndb = SQLAlchemy(app)\n \nclass Train(db.Model):\n    __tablename__ = \"trains\"\n\n    id = db.Column(db.Integer, primary_key=True)\n    number = db.Column(db.String, nullable=False)\n    title = db.Column(db.String, nullable=False)\n    txt_from = db.Column(db.String, nullable=False)\n    txt_to = db.Column(db.Integer, nullable=False)\n    leaving = db.Column(db.Integer, nullable=False)\n\ndb.create_all()\n\ntrains = []\n\ntrains.append(Train(id=1, title=\"Сапсан\",number=\"755А\",txt_from=\"Москва\",txt_to=\"Нижний Новгород\",leaving=\"09:00\"))\n\ntrains.append(Train(id=2, title=\"Ласточка\",number=\"801В\",txt_from=\"Москва\",txt_to=\"Санкт-Петербург\",leaving=\"11:30\"))\n\ntrains.append(Train(title=\"Невский экспресс\",number=\"747А\",txt_from=\"Москва\",txt_to=\"Санкт-Петербург\",leaving=\"13:20\"))\n\ntrains.append(Train(title=\"Снежинка\",number=\"107Ж\",txt_from=\"Москва\",txt_to=\"Мурманск\",leaving=\"16:20\"))\n\ntrains.append(Train(title=\"Мегаполис\",number=\"019У\",txt_from=\"Москва\",txt_to=\"Мегаполис\",leaving=\"Санкт-Петербург\"))\n\ndb.session.add_all(trains)\n\n::code \n        \n#class Trains(db.Model):\n#    __tablename__ = \"trains\"\n#\n#    id = db.Column(db.Integer, primary_key=True)\n#    number = db.Column(db.String, nullable=False)\n#    title = db.Column(db.String, nullable=False)\n#    txt_from = db.Column(db.String, nullable=False)\n#    txt_to = db.Column(db.Integer, nullable=False)\n#    leaving = db.Column(db.Integer, nullable=False)\n\n@app.route(\"/trains/<int:train_id>\",methods=[\"PATCH\"])\ndef api_patch_trains(train_id):  \n    \n    return jsonify({})\n\n::footer\n\nimport json\n        \nwith app.app_context(): \n    \n    raw_input = input().split(\" \", 2)\n\n    method = raw_input[0]\n    address = raw_input[1]   \n    data = eval(raw_input[2])   \n\n    app.testing = True\n    \n    if method==\"PATCH\":\n        \n        response = app.test_client().patch(address,json=data)\n        data = json.loads(response.data)\n   \n        print(data) ","is_time_limit_scaled":true,"is_memory_limit_scaled":true,"is_run_user_code_allowed":true,"manual_time_limits":[],"manual_memory_limits":[],"test_archive":[],"test_cases":[["PATCH /trains/2 {\"leaving\":\"11:50\"}","{'leaving': '11:50', 'number': '801В', 'title': 'Ласточка', 'txt_from': 'Москва', 'txt_to': 'Санкт-Петербург'}"],["PATCH /trains/2 {\"txt_to\":\"Волгоград\"}","{'leaving': '11:30', 'number': '801В', 'title': 'Ласточка', 'txt_from': 'Москва', 'txt_to': 'Волгоград'}"]],"are_all_tests_scored":false},"subtitles":{},"tests_archive":"/api/step-sources/1217346/tests","feedback_correct":"","feedback_wrong":""},"id":"1217346","has_review":false,"time":"2020-04-09T19:12:31.836Z"}